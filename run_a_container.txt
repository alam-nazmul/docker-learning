## In order to create and run a container, you need to run command into a downloaded image, in this case, Ubuntu, so a basic command would be to display the distribution version file inside the container using cat command, as in the following example:

docker run ubuntu cat /etc/issue


## To run one of the containers again with the command that was executed to create it, first, you must get the container ID (or the name automatically generated by Docker) by issuing the below command, which displays a list of the running and stopped (non-running) containers:

docker ps -l
docker ps -a
docker ps


## Once the container ID has been obtained, you can start the container again with the command that was used to create it, by issuing the following command:

docker start 923a720da57f


## In case the container is running state, you can get its ID by issuing docker ps command. To stop the running container issue docker stop command by specifying the container ID or auto-generated name.

docker stop 923a720da57f


## A more elegant alternative so you donâ€™t have to remember the container ID would be to allocate a unique name for every container you create by using the --name option on the command line, as in the following example:

docker run --name ubuntu20.04 ubuntu cat /etc/issue


## Then, using the name that you allocated for the container, you can manipulate container (start, stop, remove, top, stats) further just by addressing its name, as in the below examples:

docker start ubuntu20.04
docker stats ubuntu20.04
docker top ubuntu20.04